#!/bin/bash -e

# All credit https://github.com/twe4ked/catacomb

usage()
{
cat <<EOF

Encrypts content using the nominated public key, either found locally
or otherwise sourced from GitHub.
Encrypted files can then be decrypted using the matching ~/.ssh/id_rsa.

Options:
  --help       Print this help message.

Encrypting:
    catacomb $RECIPIENTS_GITHUB_USERNAME < file.txt > encrypted.txt

Decrypting:
    catacomb < encrypted.txt

EOF
}

main() {
  if [[ -n "$1" ]]; then
    PUBLIC_KEY="$HOME/.ssh/$1.pub"

    if ! [[ -e "$PUBLIC_KEY" ]]; then
      retrieve_keys "$1"
    fi

    TMP_OUT="$(mktemp "${TMPDIR:-/tmp}/$(basename "$0").XXXXXX")"
    trap '{ rm -f "$TMP_OUT"; }' EXIT

    if openssl rsautl -encrypt -pubin -inkey <(ssh-keygen -f "$PUBLIC_KEY" -e -m PKCS8) -ssl > "$TMP_OUT"; then
      echo "-- encrypted with catacomb <https://github.com/jcdarwin/catacomb>"
      openssl base64 < "$TMP_OUT"
    fi
  else
    openssl base64 -d | openssl rsautl -decrypt -inkey ~/.ssh/id_rsa
  fi
}

retrieve_keys() {
  (curl -sf "https://github.com/${1}.keys" && echo) > "$HOME/.ssh/$1.pub"

  if [[ "$(grep ^ssh < "$HOME/.ssh/$1.pub" | wc -l)" -lt 1 ]]; then
    echo "Could not find any SSH key for $1" >&2
    exit 1
  fi
}

case "$1" in
  --help)
    usage
    exit 0
    ;;
  *)
    main "$1"
    ;;
esac
